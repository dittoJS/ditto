class MyPlugin {
    apply(compiler) {
        compiler.hooks.emit.tapAsync('MyPlugin', (compilation, callback) => {
            // Explore each chunk (build output):
            //compilation.chunks.forEach(chunk => {
            // Explore each module within the chunk (built inputs):
            //     var filelist = compilation.module;
            // compilation.assets['filelist.md'] = {
            //     source: function () {
            //         return filelist;
            //     },
            //     size: function () {
            //         return filelist.length;
            //     }
            // };
            compilation.modules &&
                compilation.modules.forEach(module => {
                    // Explore each source file path that was included into the module:
                    // console.log('----- module ---------', module.request);
                    module.buildInfo.fileDependencies &&
                        module.buildInfo.fileDependencies.forEach(filepath => {
                            // we've learned a lot about the source structure now...
                        if (filepath.indexOf('node_modules') == -1 && filepath.indexOf('.babelrc') == -1) {
                                // console.log('----- file -------', filepath);
                            }
                        });
                });

            // Explore each asset filename generated by the chunk:
            // chunk.files.forEach(filename => {
            //     // Get the asset source for each file generated by the chunk:
            //     var source = compilation.assets[filename].source();
            // });
            //});

            callback();
        });
    }
}
module.exports = MyPlugin;
